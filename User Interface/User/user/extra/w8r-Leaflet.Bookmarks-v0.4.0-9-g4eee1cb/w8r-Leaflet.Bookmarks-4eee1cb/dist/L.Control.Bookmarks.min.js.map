{"version":3,"file":"L.Control.Bookmarks.min.js","sources":["../src/string.js","../src/storage/global.js","../src/storage/localstorage.js","../src/storage.js","../src/formpopup.js","../src/leaflet.delegate.js","../src/bookmarks.js","../index.js"],"sourcesContent":["/**\n * Substitutes {{ obj.field }} in strings\n *\n * @param  {String}  str\n * @param  {Object}  object\n * @param  {RegExp=} regexp\n * @return {String}\n */\nexport function substitute(str, object, regexp) {\n  return str.replace(regexp || (/{{([\\s\\S]+?)}}/g), function(match, name) {\n    name = trim(name);\n\n    if (name.indexOf('.') === -1) {\n      if (match.charAt(0) == '\\\\') return match.slice(1);\n      return (object[name] != null) ? object[name] : '';\n\n    } else { // nested\n      let result = object;\n      name = name.split('.');\n      for (var i = 0, len = name.length; i < len; i++) {\n        if (name[i] in result) result = result[name[i]];\n        else return '';\n      }\n      return result;\n    }\n  });\n}\n\nconst alpha = 'abcdefghijklmnopqrstuvwxyz';\n/**\n * Unique string from date. Puts character at the beginning,\n * for the sake of good manners\n *\n * @return {String}\n */\nexport function unique(prefix) {\n  return (prefix || alpha[Math.floor(Math.random() * alpha.length)]) +\n    (new Date()).getTime().toString(16);\n}\n\n/**\n * Trim whitespace\n * @param  {String} str\n * @return {String}\n */\nexport function trim(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Clean and trim\n * @param  {String} str\n * @return {String}\n */\nexport function clean(str) {\n  return trim(str.replace(/\\s+/g, ' '));\n}\n","/**\n * @type {Object}\n */\nconst data = {};\n\n/**\n * Object based storage\n * @class Storage.Engine.Global\n * @constructor\n */\nexport default class GlobalStorage {\n  constructor (prefix) {\n\n    /**\n     * @type {String}\n     */\n    this._prefix = prefix;\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  getItem (key, callback) {\n    callback(data[this._prefix + key]);\n  }\n\n  /**\n   * @param {String}   key\n   * @param {*}        item\n   * @param {Function} callback\n   */\n  setItem (key, item, callback) {\n    data[this._prefix + key] = item;\n    callback(item);\n  }\n\n  /**\n   * @param  {Function} callback\n   */\n  getAllItems (callback) {\n    const items = [];\n    for (const key in data) {\n      if (data.hasOwnProperty(key) && key.indexOf(this_prefix) === 0) {\n        items.push(data[key]);\n      }\n    }\n    callback(items);\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  removeItem (key, callback) {\n    this.getItem(key, (item) => {\n      if (item) {\n        delete data[this._prefix + key];\n      } else {\n        item = null;\n      }\n      if (callback) callback(item);\n    });\n  }\n}\n","/**\n * @const\n * @type {RegExp}\n */\nconst JSON_RE = /^[\\{\\[](.)*[\\]\\}]$/;\n\n/**\n * LocalStoarge based storage\n */\nexport default class LocalStorage {\n\n  constructor (prefix) {\n    /**\n     * @type {String}\n     */\n    this._prefix = prefix;\n\n    /**\n     * @type {LocalStorage}\n     */\n    this._storage = window.localStorage;\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  getItem (key, callback) {\n    let item = this._storage.getItem(this._prefix + key);\n    if (item && JSON_RE.test(item)) {\n      item = JSON.parse(item);\n    }\n    callback(item);\n  }\n\n  /**\n   * @param  {Function} callback\n   */\n  getAllItems (callback) {\n    const items = [];\n    const prefixLength = this._prefix.length;\n    for (const key in this._storage) {\n      if (this._storage.getItem(key) !== null &&\n        key.indexOf(this._prefix) === 0) {\n        this.getItem(key.substring(prefixLength), (item) => items.push(item));\n      }\n    }\n    callback(items);\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  removeItem (key, callback) {\n    const self = this;\n    this.getItem(key, (item) => {\n      this._storage.removeItem(self._prefix + key);\n      if (callback) callback(item);\n    });\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {*}        item\n   * @param  {Function} callback\n   */\n  setItem (key, item, callback) {\n    let itemStr = item.toString();\n    if (itemStr === '[object Object]') {\n      itemStr = JSON.stringify(item)\n    }\n    this._storage.setItem(this._prefix + key, itemStr);\n    callback(item);\n  }\n}\n","import { unique } from './string';\n\nimport XHR from './storage/xhr';\nimport GlobalStorage from './storage/global';\nimport LocalStorage from './storage/localstorage';\n\n/**\n * @const\n * @enum {Number}\n */\nexport const EngineType = {\n  // XHR: 1, // we don't have it included\n  GLOBALSTORAGE: 2,\n  LOCALSTORAGE: 3\n};\n\n/**\n * Persistent storage, depends on engine choice: localStorage/ajax\n * @param {String} name\n */\nexport default class Storage {\n\n  constructor(name, engineType) {\n\n    if (typeof name !== 'string') {\n      engineType = name;\n      name = unique();\n    }\n\n    /**\n     * @type {String}\n     */\n    this._name = name;\n\n    /**\n     * @type {Storage.Engine}\n     */\n    this._engine = Storage.createEngine(engineType,\n      this._name, Array.prototype.slice.call(arguments, 2));\n  }\n\n  /**\n   * Engine factory\n   * @param  {Number} type\n   * @param  {String} prefix\n   * @return {Storage.Engine}\n   */\n  static createEngine (type, prefix, args) {\n    if (type === EngineType.GLOBALSTORAGE) {\n      return new GlobalStorage(prefix);\n    }\n    if (type === EngineType.LOCALSTORAGE) {\n      return new LocalStorage(prefix);\n    }\n  }\n\n  /**\n   * @param {String}   key\n   * @param {*}        item\n   * @param {Function} callback\n   */\n  setItem (key, item, callback) {\n    this._engine.setItem(key, item, callback);\n    return this;\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  getItem (key, callback) {\n    this._engine.getItem(key, callback);\n    return this;\n  }\n\n  /**\n   * @param  {Function} callback\n   */\n  getAllItems (callback) {\n    this._engine.getAllItems(callback);\n  }\n\n  /**\n   * @param  {String}   key\n   * @param  {Function} callback\n   */\n  removeItem (key, callback) {\n    this._engine.removeItem(key, callback);\n  }\n}\n\n","import L from 'leaflet';\nimport { unique, substitute } from './string';\n\nconst modes = {\n  CREATE: 1,\n  UPDATE: 2,\n  SHOW: 3,\n  OPTIONS: 4\n};\n\n/**\n * New bookmark form popup\n *\n * @class  FormPopup\n * @extends {L.Popup}\n */\nexport default L.Popup.extend( /** @lends FormPopup.prototype */ {\n\n  statics: { modes },\n\n  /**\n   * @type {Object}\n   */\n  options: {\n    mode: modes.CREATE,\n    className: 'leaflet-bookmarks-form-popup',\n    templateOptions: {\n      formClass: 'leaflet-bookmarks-form',\n      inputClass: 'leaflet-bookmarks-form-input',\n      inputErrorClass: 'has-error',\n      idInputClass: 'leaflet-bookmarks-form-id',\n      coordsClass: 'leaflet-bookmarks-form-coords',\n      submitClass: 'leaflet-bookmarks-form-submit',\n      inputPlaceholder: 'Bookmark name',\n      removeClass: 'leaflet-bookmarks-form-remove',\n      editClass: 'leaflet-bookmarks-form-edit',\n      cancelClass: 'leaflet-bookmarks-form-cancel',\n      editableClass: 'editable',\n      removableClass: 'removable',\n      menuItemClass: 'nav-item',\n      editMenuText: 'Edit',\n      removeMenuText: 'Remove',\n      cancelMenuText: 'Cancel',\n      submitTextCreate: '+',\n      submitTextEdit: '<span class=\"icon-checkmark\"></span>'\n    },\n    generateNames: false,\n    minWidth: 160,\n    generateNamesPrefix: 'Bookmark ',\n    template: '<form class=\"{{ formClass }}\">' +\n      '<div class=\"input-group\"><input type=\"text\" name=\"bookmark-name\" ' +\n      'placeholder=\"{{ inputPlaceholder }}\" class=\"form-control {{ inputClass }}\" value=\"{{ name }}\">' +\n      '<input type=\"hidden\" class={{ idInputClass }} value=\"{{ id }}\">' +\n      '<button type=\"submit\" class=\"input-group-addon {{ submitClass }}\">' +\n      '{{ submitText }}</button></div>' +\n      '<div class=\"{{ coordsClass }}\">{{ coords }}</div>' +\n      '</form>',\n    menuTemplate: '<ul class=\"nav {{ mode }}\" role=\"menu\">' +\n      '<li class=\"{{ editClass }}\"><a href=\"#\" class=\"{{ menuItemClass }}\">{{ editMenuText }}</a></li>' +\n      '<li class=\"{{ removeClass }}\"><a href=\"#\" class=\"{{ menuItemClass }}\">{{ removeMenuText }}</a></li>' +\n      '<li><a href=\"#\" class=\"{{ menuItemClass }} {{ cancelClass }}\">{{ cancelMenuText }}</a></li>' +\n      '</ul>'\n  },\n\n  /**\n   * @param  {Object}  options\n   * @param  {L.Layer} source\n   * @param  {Object=} bookmark\n   *\n   * @constructor\n   */\n  initialize: function(options, source, control, bookmark) {\n    /**\n     * @type {Object}\n     */\n    this._bookmark = bookmark;\n\n    /**\n     * @type {L.Control.Bookmarks}\n     */\n    this._control = control;\n\n    /**\n     * @type {L.LatLng}\n     */\n    this._latlng = source.getLatLng();\n\n    /**\n     * For dragging purposes we're not maintaining the usual\n     * link between the marker and Popup, otherwise it will simply be destroyed\n     */\n    source._popup_ = this;\n\n    L.Popup.prototype.initialize.call(this, options, source);\n  },\n\n  /**\n   * Add menu button\n   */\n  _initLayout: function() {\n    L.Popup.prototype._initLayout.call(this);\n\n    if (this.options.mode === modes.SHOW &&\n      (this._bookmark.editable || this._bookmark.removable)) {\n\n      const menuButton = this._menuButton =\n        L.DomUtil.create('a', 'leaflet-popup-menu-button');\n      this._container.insertBefore(menuButton, this._closeButton);\n      menuButton.href = '#menu';\n      menuButton.innerHTML = '<span class=\"menu-icon\"></span>';\n      L.DomEvent.disableClickPropagation(menuButton);\n      L.DomEvent.on(menuButton, 'click', this._onMenuButtonClick, this);\n    }\n  },\n\n  /**\n   * Show options menu\n   */\n  _showMenu: function() {\n    this._map.fire('bookmark:options', { data: this._bookmark });\n  },\n\n  /**\n   * @param  {MouseEvent} evt\n   */\n  _onMenuButtonClick: function(evt) {\n    L.DomEvent.preventDefault(evt);\n    this._showMenu();\n    this._close();\n  },\n\n  /**\n   * Renders template only\n   * @override\n   */\n  _updateContent: function() {\n    let content;\n    if (this.options.mode === modes.SHOW) {\n      content = this._control._getPopupContent(this._bookmark);\n    } else {\n      let template = this.options.template;\n      let submitText = this.options.templateOptions.submitTextCreate;\n      if (this.options.mode === modes.OPTIONS) {\n        template = this.options.menuTemplate;\n      }\n      if (this.options.mode === modes.UPDATE) {\n        submitText = this.options.templateOptions.submitTextEdit;\n      }\n      const modeClass = [];\n      if (this._bookmark.editable) {\n        modeClass.push(this.options.templateOptions.editableClass);\n      }\n      if (this._bookmark.removable) {\n        modeClass.push(this.options.templateOptions.removableClass);\n      }\n      content = substitute(template,\n        L.Util.extend({}, this._bookmark || {}, this.options.templateOptions, {\n          submitText: submitText,\n          coords: this.formatCoords(\n            this._source.getLatLng(),\n            this._map.getZoom()\n          ),\n          mode: modeClass.join(' ')\n        }));\n    }\n    this._content = content;\n    L.Popup.prototype._updateContent.call(this);\n    this._onRendered();\n  },\n\n  /**\n   * Form rendered, set up create or edit\n   */\n  _onRendered: function() {\n    if (\n      this.options.mode === modes.CREATE ||\n      this.options.mode === modes.UPDATE\n    ) {\n      const form = this._contentNode.querySelector('.' +\n        this.options.templateOptions.formClass);\n      const input = form.querySelector('.' +\n        this.options.templateOptions.inputClass);\n\n      L.DomEvent.on(form, 'submit', this._onSubmit, this);\n      setTimeout(this._setFocus.bind(this), 250);\n    } else if (this.options.mode === modes.OPTIONS) {\n      L.DomEvent.delegate(this._container,\n        '.' + this.options.templateOptions.editClass,\n        'click', this._onEditClick, this);\n      L.DomEvent.delegate(this._container,\n        '.' + this.options.templateOptions.removeClass,\n        'click', this._onRemoveClick, this);\n      L.DomEvent.delegate(this._container,\n        '.' + this.options.templateOptions.cancelClass,\n        'click', this._onCancelClick, this);\n    }\n  },\n\n  /**\n   * Set focus at the end of input\n   */\n  _setFocus: function() {\n    const input = this._contentNode.querySelector('.' +\n      this.options.templateOptions.inputClass);\n    // Multiply by 2 to ensure the cursor always ends up at the end;\n    // Opera sometimes sees a carriage return as 2 characters.\n    const strLength = input.value.length * 2;\n    input.focus();\n    input.setSelectionRange(strLength, strLength);\n  },\n\n  /**\n   * Edit button clicked\n   * @param  {Event} evt\n   */\n  _onEditClick: function(evt) {\n    L.DomEvent.preventDefault(evt);\n    this._map.fire('bookmark:edit', { data: this._bookmark });\n    this._close();\n  },\n\n  /**\n   * Remove button clicked\n   * @param  {Event} evt\n   */\n  _onRemoveClick: function(evt) {\n    L.DomEvent.preventDefault(evt);\n    this._map.fire('bookmark:remove', { data: this._bookmark });\n    this._close();\n  },\n\n  /**\n   * Back from options view\n   * @param  {Event} evt\n   */\n  _onCancelClick: function(evt) {\n    L.DomEvent.preventDefault(evt);\n    this._map.fire('bookmark:show', { data: this._bookmark });\n    this._close();\n  },\n\n  /**\n   * Creates bookmark object from form data\n   * @return {Object}\n   */\n  _getBookmarkData: function() {\n    const options = this.options;\n    if (options.getBookmarkData) {\n      return options.getBookmarkData.call(this);\n    }\n    const input = this._contentNode.querySelector('.' +\n      options.templateOptions.inputClass);\n    const idInput = this._contentNode.querySelector('.' +\n      options.templateOptions.idInputClass);\n    return {\n      latlng: this._source.getLatLng(),\n      zoom: this._map.getZoom(),\n      name: input.value,\n      id: idInput.value || unique()\n    };\n  },\n\n  /**\n   * Form submit, dispatch eventm close popup\n   * @param {Event} evt\n   */\n  _onSubmit: function(evt) {\n    L.DomEvent.stop(evt);\n\n    const input = this._contentNode.querySelector('.' +\n      this.options.templateOptions.inputClass);\n    input.classList.remove(this.options.templateOptions.inputErrorClass);\n\n    if (input.value === '' && this.options.generateNames) {\n      input.value = unique(this.options.generateNamesPrefix);\n    }\n\n    const validate = this.options.validateInput || (() => true);\n\n    if (input.value !== '' && validate.call(this, input.value)) {\n      const bookmark = L.Util.extend({}, this._bookmark, this._getBookmarkData());\n      const map = this._map;\n\n      this._close();\n      if (this.options.mode === modes.CREATE) {\n        map.fire('bookmark:add', { data: bookmark });\n      } else {\n        map.fire('bookmark:edited', { data: bookmark });\n      }\n    } else {\n      input.classList.add(this.options.templateOptions.inputErrorClass);\n    }\n  },\n\n  /**\n   * @param  {L.LatLng} coords\n   * @param  {Number=}  zoom\n   * @return {String}\n   */\n  formatCoords: function(coords, zoom) {\n    if (this.options.formatCoords) {\n      return this.options.formatCoords.call(this, coords, zoom);\n    }\n    return [coords.lat.toFixed(4), coords.lng.toFixed(4), zoom]\n      .join(',&nbsp;');\n  },\n\n  /**\n   * Hook to source movements\n   * @param  {L.Map} map\n   * @return {Element}\n   */\n  onAdd: function(map) {\n    this._source.on('dragend', this._onSourceMoved, this);\n    this._source.on('dragstart', this._onSourceMoveStart, this);\n    return L.Popup.prototype.onAdd.call(this, map);\n  },\n\n  /**\n   * @param  {L.Map} map\n   */\n  onRemove: function(map) {\n    this._source.off('dragend', this._onSourceMoved, this);\n    L.Popup.prototype.onRemove.call(this, map);\n  },\n\n  /**\n   * Marker drag\n   */\n  _onSourceMoveStart: function() {\n    // store\n    this._bookmark = L.Util.extend(this._bookmark || {}, this._getBookmarkData());\n    this._container.style.display = 'none';\n  },\n\n  /**\n   * Marker moved\n   * @param  {Event} e\n   */\n  _onSourceMoved: function(e) {\n    this._latlng = this._source.getLatLng();\n    this._container.style.display = '';\n    this._source.openPopup();\n    this.update();\n  }\n});\n","import L from 'leaflet';\n\n/**\n * Courtesy of https://github.com/component/matches-selector\n */\nconst matchesSelector = ((ElementPrototype) => {\n  const matches = ElementPrototype.matches ||\n    ElementPrototype.webkitMatchesSelector ||\n    ElementPrototype.mozMatchesSelector ||\n    ElementPrototype.msMatchesSelector ||\n    ElementPrototype.oMatchesSelector ||\n    // hello IE\n    function(selector) {\n      var node = this,\n        parent = (node.parentNode || node.document),\n        nodes = parent.querySelectorAll(selector);\n\n      for (var i = 0, len = nodes.length; i < len; ++i) {\n        if (nodes[i] == node) return true;\n      }\n      return false;\n    };\n\n  /**\n   * @param  {Element} element\n   * @param  {String} selector\n   * @return {Boolean}\n   */\n  return function(element, selector) {\n    return matches.call(element, selector);\n  };\n})(Element.prototype);\n\n/**\n * Courtesy of https://github.com/component/closest\n *\n * @param  {Element} element\n * @param  {String}  selector\n * @param  {Boolean} checkSelf\n * @param  {Element} root\n *\n * @return {Element|Null}\n */\nfunction closest(element, selector, checkSelf, root) {\n  element = checkSelf ? {\n    parentNode: element\n  } : element\n\n  root = root || document;\n\n  // Make sure `element !== document` and `element != null`\n  // otherwise we get an illegal invocation\n  while ((element = element.parentNode) && element !== document) {\n    if (matchesSelector(element, selector)) return element\n    // After `matches` on the edge case that\n    // the selector matches the root\n    // (when the root is not the document)\n    if (element === root) return null;\n  }\n}\n\n/**\n * Based on https://github.com/component/delegate\n *\n * @param  {Element}  el\n * @param  {String}   selector\n * @param  {String}   type\n * @param  {Function} fn\n *\n * @return {Function}\n */\nL.DomEvent.delegate = function(el, selector, type, fn, bind) {\n  return L.DomEvent.on(el, type, (evt) => {\n    const target = evt.target || evt.srcElement;\n    evt.delegateTarget = closest(target, selector, true, el);\n    if (evt.delegateTarget && !evt.propagationStopped) {\n      fn.call(bind || el, evt);\n    }\n  });\n};\n","import L from 'leaflet';\nimport Storage, { EngineType } from './storage';\nimport FormPopup from './formpopup';\nimport { substitute } from './string';\nimport './leaflet.delegate';\n\n// expose\nL.Util._template = L.Util._template || substitute;\n\n/**\n * Bookmarks control\n * @class  L.Control.Bookmarks\n * @extends {L.Control}\n */\nexport default L.Control.extend( /**  @lends Bookmarks.prototype */ {\n\n  statics: {\n    Storage,\n    FormPopup\n  },\n\n  /**\n   * @type {Object}\n   */\n  options: {\n    localStorage: true,\n\n    /* you can provide access to your own storage,\n     * xhr for example, but make sure it has all\n     * required endpoints:\n     *\n     * .getItem(id, callback)\n     * .setItem(id, callback)\n     * .getAllItems(callback)\n     * .removeItem(id, callback)\n     */\n    storage: null,\n    name: 'leaflet-bookmarks',\n    position: 'topright', // chose your own if you want\n\n    containerClass: 'leaflet-bar leaflet-bookmarks-control',\n    expandedClass: 'expanded',\n    headerClass: 'bookmarks-header',\n    listClass: 'bookmarks-list',\n    iconClass: 'bookmarks-icon',\n    iconWrapperClass: 'bookmarks-icon-wrapper',\n    listWrapperClass: 'bookmarks-list-wrapper',\n    listWrapperClassAdd: 'list-with-button',\n    wrapperClass: 'bookmarks-container',\n    addBookmarkButtonCss: 'add-bookmark-button',\n\n    animateClass: 'bookmark-added-anim',\n    animateDuration: 150,\n\n    formPopup: {\n      popupClass: 'bookmarks-popup'\n    },\n\n    bookmarkTemplate: '<li class=\"{{ itemClass }}\" data-id=\"{{ data.id }}\">' +\n      '<span class=\"{{ removeClass }}\">&times;</span>' +\n      '<span class=\"{{ nameClass }}\">{{ data.name }}</span>' +\n      '<span class=\"{{ coordsClass }}\">{{ data.coords }}</span>' +\n      '</li>',\n\n    emptyTemplate: '<li class=\"{{ itemClass }} {{ emptyClass }}\">' +\n      '{{ data.emptyMessage }}</li>',\n\n    dividerTemplate: '<li class=\"divider\"></li>',\n\n    bookmarkTemplateOptions: {\n      itemClass: 'bookmark-item',\n      nameClass: 'bookmark-name',\n      coordsClass: 'bookmark-coords',\n      removeClass: 'bookmark-remove',\n      emptyClass: 'bookmarks-empty'\n    },\n\n    defaultBookmarkOptions: {\n      editable: true,\n      removable: true\n    },\n\n    title: 'Bookmarks',\n    emptyMessage: 'No bookmarks yet',\n    addBookmarkMessage: 'Add new bookmark',\n    collapseOnClick: true,\n    scrollOnAdd: true,\n    scrollDuration: 1000,\n    popupOnShow: true,\n    addNewOption: true,\n\n    /**\n     * This you can change easily to output\n     * whatever you have stored in bookmark\n     *\n     * @type {String}\n     */\n    popupTemplate: '<div><h3>{{ name }}</h3><p>{{ latlng }}, {{ zoom }}</p></div>',\n\n    /**\n     * Prepare your bookmark data for template.\n     * If you don't change it, the context of this\n     * function will be bookmarks control, so you can\n     * access the map or other things from here\n     *\n     * @param  {Object} bookmark\n     * @return {Object}\n     */\n    getPopupContent: function(bookmark) {\n      return substitute(this.options.popupTemplate, {\n        latlng: this.formatCoords(bookmark.latlng),\n        name: bookmark.name,\n        zoom: this._map.getZoom()\n      });\n    }\n  },\n\n  /**\n   * @param  {Object} options\n   * @constructor\n   */\n  initialize: function(options) {\n\n    options = options || {};\n\n    /**\n     * Bookmarks array\n     * @type {Array}\n     */\n    this._data = [];\n\n    /**\n     * @type {Element}\n     */\n    this._list = null;\n\n    /**\n     * @type {L.Marker}\n     */\n    this._marker = null;\n\n    /**\n     * @type {HTMLElement}\n     */\n    this._addButton = null;\n\n    /**\n     * @type {Element}\n     */\n    this._icon = null;\n\n    /**\n     * @type {Boolean}\n     */\n    this._isCollapsed = true;\n\n    L.Util.setOptions(this, options);\n\n    /**\n     * @type {Storage}\n     */\n    this._storage = options.storage ||\n      (this.options.localStorage ?\n        new Storage(this.options.name, EngineType.LOCALSTORAGE) :\n        new Storage(this.options.name, EngineType.GLOBALSTORAGE));\n\n    L.Control.prototype.initialize.call(this, this.options);\n  },\n\n  /**\n   * @param {L.Map} map\n   */\n  onAdd: function(map) {\n    const container = this._container = L.DomUtil.create('div',\n      this.options.containerClass\n    );\n\n    L.DomEvent\n      .disableClickPropagation(container)\n      .disableScrollPropagation(container);\n    container.innerHTML = '<div class=\"' + this.options.headerClass +\n      '\"><span class=\"' + this.options.iconWrapperClass + '\">' +\n      '<span class=\"' + this.options.iconClass + '\"></span></span>';\n\n    this._icon = container.querySelector('.' + this.options.iconClass);\n    this._icon.title = this.options.title;\n\n    this._createList(this.options.bookmarks);\n\n    const wrapper = L.DomUtil.create('div',\n      this.options.wrapperClass, this._container);\n    wrapper.appendChild(this._listwrapper);\n\n    this._initLayout();\n\n    L.DomEvent\n      .on(container, 'click', this._onClick, this)\n      .on(container, 'contextmenu', L.DomEvent.stopPropagation);\n\n    map\n      .on('bookmark:new', this._onBookmarkAddStart, this)\n      .on('bookmark:add', this._onBookmarkAdd, this)\n      .on('bookmark:edited', this._onBookmarkEdited, this)\n      .on('bookmark:show', this._onBookmarkShow, this)\n      .on('bookmark:edit', this._onBookmarkEdit, this)\n      .on('bookmark:options', this._onBookmarkOptions, this)\n      .on('bookmark:remove', this._onBookmarkRemove, this)\n      .on('resize', this._initLayout, this);\n\n    return container;\n  },\n\n  /**\n   * @param  {L.Map} map\n   */\n  onRemove: function(map) {\n    map\n      .off('bookmark:new', this._onBookmarkAddStart, this)\n      .off('bookmark:add', this._onBookmarkAdd, this)\n      .off('bookmark:edited', this._onBookmarkEdited, this)\n      .off('bookmark:show', this._onBookmarkShow, this)\n      .off('bookmark:edit', this._onBookmarkEdit, this)\n      .off('bookmark:options', this._onBookmarkOptions, this)\n      .off('bookmark:remove', this._onBookmarkRemove, this)\n      .off('resize', this._initLayout, this);\n\n    if (this._marker) this._marker._popup_._close();\n\n    if (this.options.addNewOption) {\n      L.DomEvent.off(this._container.querySelector('.' +\n          this.options.addBookmarkButtonCss), 'click',\n        this._onAddButtonPressed, this);\n    }\n\n    this._marker = null;\n    this._popup = null;\n    this._container = null;\n  },\n\n  /**\n   * @return {Array.<Object>}\n   */\n  getData: function() {\n    return this._filterBookmarksOutput(this._data);\n  },\n\n  /**\n   * @param  {Array.<Number>|Function|null} bookmarks\n   */\n  _createList: function(bookmarks) {\n    this._listwrapper = L.DomUtil.create(\n      'div', this.options.listWrapperClass, this._container);\n    this._list = L.DomUtil.create(\n      'ul', this.options.listClass, this._listwrapper);\n\n    // select bookmark\n    L.DomEvent.delegate(\n      this._list,\n      '.' + this.options.bookmarkTemplateOptions.itemClass,\n      'click',\n      this._onBookmarkClick,\n      this\n    );\n\n    this._setEmptyListContent();\n\n    if (L.Util.isArray(bookmarks)) {\n      this._appendItems(bookmarks);\n    } else if (typeof bookmarks === 'function') {\n      this._appendItems(bookmarks());\n    } else {\n      this._storage.getAllItems((bookmarks) => this._appendItems(bookmarks));\n    }\n  },\n\n  /**\n   * Empty list\n   */\n  _setEmptyListContent: function() {\n    this._list.innerHTML = substitute(this.options.emptyTemplate,\n      L.Util.extend(this.options.bookmarkTemplateOptions, {\n        data: {\n          emptyMessage: this.options.emptyMessage\n        }\n      }));\n  },\n\n  /**\n   * Sees that the list size is not too big\n   */\n  _initLayout: function() {\n    const size = this._map.getSize();\n    this._listwrapper.style.maxHeight =\n      Math.min(size.y * 0.6, size.y - 100) + 'px';\n\n    if (this.options.position === 'topleft') {\n      L.DomUtil.addClass(this._container, 'leaflet-bookmarks-to-right');\n    }\n    if (this.options.addNewOption) {\n      const addButton = L.DomUtil.create('div', this.options.addBookmarkButtonCss);\n      if (this._addButton === null) {\n        this._listwrapper.parentNode.appendChild(addButton);\n        this._addButton = addButton;\n        this._listwrapper.parentNode\n          .classList.add(this.options.listWrapperClassAdd);\n        addButton.innerHTML = '<span class=\"plus\">+</span>' +\n          '<span class=\"content\">' +\n          this.options.addBookmarkMessage + '</span>';\n        L.DomEvent.on(addButton, 'click', this._onAddButtonPressed, this);\n      }\n    }\n  },\n\n  /**\n   * @param  {MouseEvent} evt\n   */\n  _onAddButtonPressed: function(evt) {\n    L.DomEvent.stop(evt);\n    this.collapse();\n    this._map.fire('bookmark:new', {\n      latlng: this._map.getCenter()\n    });\n  },\n\n  /**\n   * I don't care if they're unique or not,\n   * if you do - handle this\n   *\n   * @param {Array.<Object>} bookmarks\n   * @return {Array.<Object>}\n   */\n  _filterBookmarks: function(bookmarks) {\n    if (this.options.filterBookmarks) {\n      return this.options.filterBookmarks.call(this, bookmarks);\n    }\n    return bookmarks;\n  },\n\n  /**\n   * Filter bookmarks for output. This one allows you to save dividers as well\n   *\n   * @param {Array.<Object>} bookmarks\n   * @return {Array.<Object>}\n   */\n  _filterBookmarksOutput: function(bookmarks) {\n    if (this.options.filterBookmarksOutput) {\n      return this.options.filterBookmarksOutput.call(this, bookmarks);\n    }\n    return bookmarks;\n  },\n\n  /**\n   * Append list items(render)\n   * @param  {Array.<Object>} bookmarks\n   */\n  _appendItems: function(bookmarks) {\n    let html = '';\n    let wasEmpty = this._data.length === 0;\n    let bookmark;\n\n    // maybe you have something in mind?\n    bookmarks = this._filterBookmarks(bookmarks);\n\n    // store\n    this._data = this._data.concat(bookmarks);\n\n    for (let i = 0, len = bookmarks.length; i < len; i++) {\n      html += this._renderBookmarkItem(bookmarks[i]);\n    }\n\n    if (html !== '') {\n      // replace `empty` message if needed\n      if (wasEmpty) {\n        this._list.innerHTML = html;\n      } else {\n        this._list.innerHTML += html;\n      }\n    }\n\n    if (this._isCollapsed) {\n      const container = this._container;\n      const className = this.options.animateClass;\n      container.classList.add(className);\n      window.setTimeout(function() {\n        container.classList.remove(className);\n      }, this.options.animateDuration);\n    } else {\n      this._scrollToLast();\n    }\n  },\n\n  /**\n   * Scrolls to last element of the list\n   */\n  _scrollToLast: function() {\n    const listwrapper = this._listwrapper;\n    let pos = this._listwrapper.scrollTop;\n    const targetVal = this._list.lastChild.offsetTop;\n    let start = 0;\n\n    const step = (targetVal - pos) / (this.options.scrollDuration / (1000 / 16));\n\n    function scroll(timestamp) {\n      if (!start) start = timestamp\n      //var progress = timestamp - start;\n\n      pos = Math.min(pos + step, targetVal);\n      listwrapper.scrollTop = pos;\n      if (pos !== targetVal) {\n        L.Util.requestAnimFrame(scroll);\n      }\n    }\n    L.Util.requestAnimFrame(scroll);\n  },\n\n  /**\n   * Render single bookmark item\n   * @param  {Object} bookmark\n   * @return {String}\n   */\n  _renderBookmarkItem: function(bookmark) {\n    if (bookmark.divider) {\n      return substitute(this.options.dividerTemplate, bookmark);\n    }\n\n    this.options.bookmarkTemplateOptions.data =\n      this._getBookmarkDataForTemplate(bookmark);\n\n    return substitute(\n      this.options.bookmarkTemplate,\n      this.options.bookmarkTemplateOptions\n    );\n  },\n\n  /**\n   * Extracts data and style expressions for item template\n   * @param  {Object} bookmark\n   * @return {Object}\n   */\n  _getBookmarkDataForTemplate: function(bookmark) {\n    if (this.options.getBookmarkDataForTemplate) {\n      return this.options.getBookmarkDataForTemplate.call(this, bookmark);\n    }\n    return {\n      coords: this.formatCoords(bookmark.latlng),\n      name: this.formatName(bookmark.name),\n      zoom: bookmark.zoom,\n      id: bookmark.id\n    };\n  },\n\n  /**\n   * @param  {L.LatLng} latlng\n   * @return {String}\n   */\n  formatCoords: function(latlng) {\n    if (this.options.formatCoords) {\n      return this.options.formatCoords.call(this, latlng);\n    }\n    return latlng[0].toFixed(4) + ',&nbsp;' + latlng[1].toFixed(4);\n  },\n\n  /**\n   * @param  {String} name\n   * @return {String}\n   */\n  formatName: function(name) {\n    if (this.options.formatName) {\n      return this.options.formatName.call(this, name);\n    }\n    return name;\n  },\n\n  /**\n   * Shows bookmarks list\n   */\n  expand: function() {\n    L.DomUtil.addClass(this._container, this.options.expandedClass);\n    this._isCollapsed = false;\n  },\n\n  /**\n   * Hides bookmarks list and the form\n   */\n  collapse: function() {\n    L.DomUtil.removeClass(this._container, this.options.expandedClass);\n    this._isCollapsed = true;\n  },\n\n  /**\n   * @param  {Event} evt\n   */\n  _onClick: function(evt) {\n    const expanded = L.DomUtil.hasClass(this._container, this.options.expandedClass);\n    let target = evt.target || evt.srcElement;\n\n    if (expanded) {\n      if (target === this._container) {\n        return this.collapse();\n      }\n      // check if it's inside the header\n      while (target !== this._container) {\n        if (L.DomUtil.hasClass(target, this.options.headerClass) ||\n          L.DomUtil.hasClass(target, this.options.listWrapperClass)) {\n          this.collapse();\n          break;\n        }\n        target = target.parentNode;\n      }\n    } else this.expand();\n  },\n\n  /**\n   * @param  {Object} evt\n   */\n  _onBookmarkAddStart: function(evt) {\n    if (this._marker) this._popup._close();\n\n    this._marker = new L.Marker(evt.latlng, {\n      icon: this.options.icon || new L.Icon.Default(),\n      draggable: true,\n      riseOnHover: true\n    }).addTo(this._map);\n    this._marker.on('popupclose', this._onPopupClosed, this);\n\n    // open form\n    this._popup = new L.Control.Bookmarks.FormPopup(\n      L.Util.extend(this.options.formPopup, {\n        mode: L.Control.Bookmarks.FormPopup.modes.CREATE\n      }),\n      this._marker,\n      this,\n      L.Util.extend({}, evt.data, this.options.defaultBookmarkOptions)\n    ).addTo(this._map);\n  },\n\n  /**\n   * Bookmark added\n   * @param  {Object} bookmark\n   */\n  _onBookmarkAdd: function(bookmark) {\n    const map = this._map;\n    bookmark = this._cleanBookmark(bookmark.data);\n    this._storage.setItem(bookmark.id, bookmark, (item) => {\n      map.fire('bookmark:saved', {\n        data: item\n      });\n      this._appendItems([item]);\n    });\n    this._showBookmark(bookmark);\n  },\n\n  /**\n   * Update done\n   * @param  {Event} evt\n   */\n  _onBookmarkEdited: function(evt) {\n    const map = this._map;\n    const bookmark = this._cleanBookmark(evt.data);\n    this._storage.setItem(bookmark.id, bookmark, (item) => {\n      map.fire('bookmark:saved', { data: item });\n      const data = this._data;\n      this._data = [];\n      for (var i = 0, len = data.length; i < len; i++) {\n        if (data[i].id === bookmark.id) {\n          data.splice(i, 1, bookmark);\n        }\n      }\n      this._appendItems(data);\n    });\n    this._showBookmark(bookmark);\n  },\n\n  /**\n   * Cleans circular reference for JSON\n   * @param  {Object} bookmark\n   * @return {Object}\n   */\n  _cleanBookmark: function(bookmark) {\n    if (!L.Util.isArray(bookmark.latlng)) {\n      bookmark.latlng = [bookmark.latlng.lat, bookmark.latlng.lng];\n    }\n    return bookmark;\n  },\n\n  /**\n   * Form closed\n   * @param  {Object} evt\n   */\n  _onPopupClosed: function(evt) {\n    this._map.removeLayer(this._marker);\n    this._marker = null;\n    this._popup = null;\n  },\n\n  /**\n   * @param  {String} id\n   * @return {Object|Null}\n   */\n  _getBookmark: function(id) {\n    for (let i = 0, len = this._data.length; i < len; i++) {\n      if (this._data[i].id === id) return this._data[i];\n    }\n    return null;\n  },\n\n  /**\n   * @param  {Object} evt\n   */\n  _onBookmarkShow: function(evt) {\n    this._gotoBookmark(evt.data);\n  },\n\n  /**\n   * Event handler for edit\n   * @param  {Object} evt\n   */\n  _onBookmarkEdit: function(evt) {\n    this._editBookmark(evt.data);\n  },\n\n  /**\n   * Remove bookmark triggered\n   * @param  {Event} evt\n   */\n  _onBookmarkRemove: function(evt) {\n    this._removeBookmark(evt.data);\n  },\n\n  /**\n   * Bookmark options called\n   * @param  {Event} evt\n   */\n  _onBookmarkOptions: function(evt) {\n    this._bookmarkOptions(evt.data);\n  },\n\n  /**\n   * Show menu popup\n   * @param  {Object} bookmark\n   */\n  _bookmarkOptions: function(bookmark) {\n    const coords = L.latLng(bookmark.latlng);\n    const marker = this._marker = this._createMarker(coords, bookmark);\n    // open form\n    this._popup = new L.Control.Bookmarks.FormPopup(\n      L.Util.extend(this.options.formPopup, {\n        mode: L.Control.Bookmarks.FormPopup.modes.OPTIONS\n      }),\n      marker,\n      this,\n      bookmark\n    ).addTo(this._map);\n  },\n\n  /**\n   * Call edit popup\n   * @param  {Object} bookmark\n   */\n  _editBookmark: function(bookmark) {\n    const coords = L.latLng(bookmark.latlng);\n    const marker = this._marker = this._createMarker(coords, bookmark);\n    marker.dragging.enable();\n    // open form\n    this._popup = new L.Control.Bookmarks.FormPopup(\n      L.Util.extend(this.options.formPopup, {\n        mode: L.Control.Bookmarks.FormPopup.modes.UPDATE\n      }),\n      marker,\n      this,\n      bookmark\n    ).addTo(this._map);\n  },\n\n  /**\n   * Returns a handler that will remove the bookmark from map\n   * in case it got removed from the list\n   * @param  {Object}   bookmark\n   * @param  {L.Marker} marker\n   * @return {Function}\n   */\n  _getOnRemoveHandler: function(bookmark, marker) {\n    return function (evt) {\n      if (evt.data.id === bookmark.id) {\n        marker.clearAllEventListeners();\n        if (marker._popup_) marker._popup_._close();\n        this.removeLayer(marker);\n      }\n    };\n  },\n\n  /**\n   * Creates bookmark marker\n   * @param  {L.LatLng} coords\n   * @param  {Object}   bookmark\n   * @return {L.Marker}\n   */\n  _createMarker: function(coords, bookmark) {\n    const marker = new L.Marker(coords, {\n      icon: this.options.icon || new L.Icon.Default(),\n      riseOnHover: true\n    }).addTo(this._map);\n    const removeIfRemoved = this._getOnRemoveHandler(bookmark, marker);\n    this._map.on('bookmark:removed', removeIfRemoved, this._map);\n    marker\n      .on('popupclose', () => this._map.removeLayer(this))\n      .on('remove', () => this._map.off('bookmark:removed', removeIfRemoved));\n    return marker;\n  },\n\n  /**\n   * Shows bookmark, nothing else\n   * @param  {Object} bookmark\n   */\n  _showBookmark: function(bookmark) {\n    if (this._marker) this._marker._popup_._close();\n    const coords = L.latLng(bookmark.latlng);\n    const marker = this._createMarker(coords, bookmark);\n    const popup = new L.Control.Bookmarks.FormPopup(\n      L.Util.extend(this.options.formPopup, {\n        mode: L.Control.Bookmarks.FormPopup.modes.SHOW\n      }),\n      marker,\n      this,\n      bookmark\n    );\n    if (this.options.popupOnShow) popup.addTo(this._map);\n    this._popup = popup;\n    this._marker = marker;\n  },\n\n  /**\n   * @param  {Object} bookmark\n   */\n  _gotoBookmark: function(bookmark) {\n    this._map.setView(bookmark.latlng, bookmark.zoom);\n    this._showBookmark(bookmark);\n  },\n\n  /**\n   * @param  {Object} bookmark\n   */\n  _removeBookmark: function(bookmark) {\n    const remove = (proceed) => {\n      if (!proceed) return this._showBookmark(bookmark);\n\n      this._data.splice(this._data.indexOf(bookmark), 1);\n      this._storage.removeItem(bookmark.id, (bookmark) => {\n        this._onBookmarkRemoved(bookmark);\n      });\n    };\n\n    if (typeof this.options.onRemove === 'function') {\n      this.options.onRemove(bookmark, remove);\n    } else {\n      remove(true);\n    }\n  },\n\n  /**\n   * @param  {Object} bookmark\n   */\n  _onBookmarkRemoved: function(bookmark) {\n    const li = this._list.querySelector('.' +\n        this.options.bookmarkTemplateOptions.itemClass +\n        \"[data-id='\" + bookmark.id + \"']\");\n\n    this._map.fire('bookmark:removed', { data: bookmark });\n\n    if (li) {\n      L.DomUtil.setOpacity(li, 0);\n      setTimeout(() => {\n        if (li.parentNode) li.parentNode.removeChild(li);\n        if (this._data.length === 0) this._setEmptyListContent();\n      }, 250);\n    }\n  },\n\n  /**\n   * Gets popup content\n   * @param  {Object} bookmark\n   * @return {String}\n   */\n  _getPopupContent: function(bookmark) {\n    if (this.options.getPopupContent) {\n      return this.options.getPopupContent.call(this, bookmark);\n    }\n    return JSON.stringify(bookmark);\n  },\n\n  /**\n   * @param  {Event} e\n   */\n  _onBookmarkClick: function(evt) {\n    const bookmark = this._getBookmarkFromListItem(evt.delegateTarget);\n    if (!bookmark) return;\n    L.DomEvent.stopPropagation(evt);\n\n    // remove button hit\n    if (L.DomUtil.hasClass(evt.target || evt.srcElement,\n        this.options.bookmarkTemplateOptions.removeClass)) {\n      this._removeBookmark(bookmark);\n    } else {\n      this._map.fire('bookmark:show', { data: bookmark });\n      if (this.options.collapseOnClick) this.collapse();\n    }\n  },\n\n  /**\n   * In case you've decided to play with ids - we've got you covered\n   * @param  {Element} li\n   * @return {Object|Null}\n   */\n  _getBookmarkFromListItem: function(li) {\n    if (this.options.getBookmarkFromListItem) {\n      return this.options.getBookmarkFromListItem.call(this, li);\n    }\n    return this._getBookmark(li.getAttribute('data-id'));\n  },\n\n  /**\n   * GeoJSON feature out of a bookmark\n   * @param  {Object} bookmark\n   * @return {Object}\n   */\n  bookmarkToFeature: function(bookmark) {\n    const coords = this._getBookmarkCoords(bookmark);\n    bookmark = JSON.parse(JSON.stringify(bookmark)); // quick copy\n    delete bookmark.latlng;\n\n    return L.GeoJSON.getFeature({\n      feature: {\n        type: 'Feature',\n        id: bookmark.id,\n        properties: bookmark\n      }\n    }, {\n      type: 'Point',\n      coordinates: coords\n    });\n  },\n\n  /**\n   * @param  {Object} bookmark\n   * @return {Array.<Number>}\n   */\n  _getBookmarkCoords: function(bookmark) {\n    if (bookmark.latlng instanceof L.LatLng) {\n      return [bookmark.latlng.lat, bookmark.latlng.lng];\n    }\n    return bookmark.latlng.reverse();\n  },\n\n  /**\n   * Read bookmarks from GeoJSON FeatureCollectio\n   * @param  {Object} geojson\n   * @return {Object}\n   */\n  fromGeoJSON: function(geojson) {\n    const bookmarks = [];\n    for (let i = 0, len = geojson.features.length; i < len; i++) {\n      const bookmark = geojson.features[i];\n      if (!bookmark.properties.divider) {\n        bookmark.properties.latlng = bookmark.geometry\n          .coordinates.concat().reverse();\n      }\n      bookmarks.push(bookmark.properties);\n    }\n    return bookmarks;\n  },\n\n  /**\n   * @return {Object}\n   */\n  toGeoJSON: function() {\n    return {\n      type: 'FeatureCollection',\n      features: ((data) => {\n        const result = [];\n        for (let i = 0, len = data.length; i < len; i++) {\n          if (!data[i].divider) {\n            result.push(this.bookmarkToFeature(data[i]));\n          }\n        }\n        return result;\n      })(this._data)\n    };\n  }\n});\n","import L from 'leaflet';\nimport Bookmarks from './src/bookmarks';\n\nL.Control.Bookmarks = Bookmarks;\n\nexport default Bookmarks;\n"],"names":["substitute","str","object","regexp","replace","match","name","trim","indexOf","charAt","slice","let","result","i","len","split","length","const","alpha","unique","prefix","Math","floor","random","Date","getTime","toString","data","GlobalStorage","this","_prefix","getItem","key","callback","setItem","item","getAllItems","items","hasOwnProperty","this_prefix","push","removeItem","JSON_RE","LocalStorage","_storage","window","localStorage","test","JSON","parse","prefixLength","substring","self","itemStr","stringify","EngineType","Storage","engineType","_name","_engine","createEngine","Array","prototype","call","arguments","type","args","ElementPrototype","matches","modes","CREATE","UPDATE","SHOW","OPTIONS","L","Popup","extend","statics","options","mode","className","templateOptions","formClass","inputClass","inputErrorClass","idInputClass","coordsClass","submitClass","inputPlaceholder","removeClass","editClass","cancelClass","editableClass","removableClass","menuItemClass","editMenuText","removeMenuText","cancelMenuText","submitTextCreate","submitTextEdit","generateNames","minWidth","generateNamesPrefix","template","menuTemplate","initialize","source","control","bookmark","_bookmark","_control","_latlng","getLatLng","_popup_","_initLayout","editable","removable","menuButton","_menuButton","DomUtil","create","_container","insertBefore","_closeButton","href","innerHTML","DomEvent","disableClickPropagation","on","_onMenuButtonClick","_showMenu","_map","fire","evt","preventDefault","_close","_updateContent","content","_getPopupContent","submitText","modeClass","Util","coords","formatCoords","_source","getZoom","join","_content","_onRendered","form","_contentNode","querySelector","_onSubmit","setTimeout","_setFocus","bind","delegate","_onEditClick","_onRemoveClick","_onCancelClick","input","strLength","value","focus","setSelectionRange","_getBookmarkData","getBookmarkData","idInput","latlng","zoom","id","stop","classList","remove","validate","validateInput","map","add","lat","toFixed","lng","onAdd","_onSourceMoved","_onSourceMoveStart","onRemove","off","style","display","e","openPopup","update","matchesSelector","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","selector","nodes","parentNode","document","querySelectorAll","element","el","fn","target","srcElement","delegateTarget","checkSelf","root","closest","propagationStopped","_template","Control","FormPopup","storage","position","containerClass","expandedClass","headerClass","listClass","iconClass","iconWrapperClass","listWrapperClass","listWrapperClassAdd","wrapperClass","addBookmarkButtonCss","animateClass","animateDuration","formPopup","popupClass","bookmarkTemplate","emptyTemplate","dividerTemplate","bookmarkTemplateOptions","itemClass","nameClass","emptyClass","defaultBookmarkOptions","title","emptyMessage","addBookmarkMessage","collapseOnClick","scrollOnAdd","scrollDuration","popupOnShow","addNewOption","popupTemplate","getPopupContent","_data","_list","_marker","_addButton","_icon","_isCollapsed","setOptions","container","disableScrollPropagation","_createList","bookmarks","appendChild","_listwrapper","_onClick","stopPropagation","_onBookmarkAddStart","_onBookmarkAdd","_onBookmarkEdited","_onBookmarkShow","_onBookmarkEdit","_onBookmarkOptions","_onBookmarkRemove","_onAddButtonPressed","_popup","getData","_filterBookmarksOutput","_onBookmarkClick","_setEmptyListContent","isArray","_appendItems","size","getSize","maxHeight","min","y","addClass","addButton","collapse","getCenter","_filterBookmarks","filterBookmarks","filterBookmarksOutput","html","wasEmpty","concat","_renderBookmarkItem","_scrollToLast","listwrapper","pos","scrollTop","targetVal","lastChild","offsetTop","step","requestAnimFrame","scroll","timestamp","divider","_getBookmarkDataForTemplate","getBookmarkDataForTemplate","formatName","expand","expanded","hasClass","Marker","icon","Icon","Default","draggable","riseOnHover","addTo","_onPopupClosed","Bookmarks","_cleanBookmark","_showBookmark","splice","removeLayer","_getBookmark","_gotoBookmark","_editBookmark","_removeBookmark","_bookmarkOptions","latLng","marker","_createMarker","dragging","enable","_getOnRemoveHandler","clearAllEventListeners","removeIfRemoved","popup","setView","proceed","_onBookmarkRemoved","li","setOpacity","removeChild","_getBookmarkFromListItem","getBookmarkFromListItem","getAttribute","bookmarkToFeature","_getBookmarkCoords","GeoJSON","getFeature","feature","properties","coordinates","LatLng","reverse","fromGeoJSON","geojson","features","geometry","toGeoJSON"],"mappings":"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"}